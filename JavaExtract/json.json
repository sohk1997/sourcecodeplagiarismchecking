[{"startLine":45,"endLine":47,"tree":{"type":"MethodDeclaration","startLine":45,"endLine":47,"childNodes":[{"type":"Modifier","startLine":45,"endLine":45,"childNodes":[]},{"type":"SimpleName","startLine":45,"endLine":45,"childNodes":[]},{"type":"VoidType","startLine":45,"endLine":45,"childNodes":[]},{"type":"BlockStmt","startLine":45,"endLine":47,"childNodes":[{"type":"ExpressionStmt","startLine":46,"endLine":46,"childNodes":[{"type":"MethodCallExpr","startLine":46,"endLine":46,"childNodes":[{"type":"NameExpr","startLine":46,"endLine":46,"childNodes":[{"type":"SimpleName","startLine":46,"endLine":46,"childNodes":[]}]},{"type":"SimpleName","startLine":46,"endLine":46,"childNodes":[]}]}]}]}]},"processedContent":"/**\n * Post test clean up.\n */\npublic void tearDown() {\n    VARIABLE_1.resetConfiguration();\n}","baseMethod":"/**\n * Post test clean up.\n */\npublic void tearDown() {\n    LogManager.resetConfiguration();\n}","methodName":"tearDown"},{"startLine":52,"endLine":54,"tree":{"type":"MethodDeclaration","startLine":52,"endLine":54,"childNodes":[{"type":"Modifier","startLine":52,"endLine":52,"childNodes":[]},{"type":"SimpleName","startLine":52,"endLine":52,"childNodes":[]},{"type":"ClassOrInterfaceType","startLine":52,"endLine":52,"childNodes":[{"type":"SimpleName","startLine":52,"endLine":52,"childNodes":[]}]},{"type":"BlockStmt","startLine":52,"endLine":54,"childNodes":[{"type":"ThrowStmt","startLine":53,"endLine":53,"childNodes":[{"type":"ObjectCreationExpr","startLine":53,"endLine":53,"childNodes":[{"type":"ClassOrInterfaceType","startLine":53,"endLine":53,"childNodes":[{"type":"SimpleName","startLine":53,"endLine":53,"childNodes":[]}]}]}]}]}]},"processedContent":"public String toString() {\n    throw new NullPointerException();\n}","baseMethod":"public String toString() {\n    throw new NullPointerException();\n}","methodName":"toString"},{"startLine":61,"endLine":66,"tree":{"type":"MethodDeclaration","startLine":61,"endLine":66,"childNodes":[{"type":"Modifier","startLine":61,"endLine":61,"childNodes":[]},{"type":"SimpleName","startLine":61,"endLine":61,"childNodes":[]},{"type":"VoidType","startLine":61,"endLine":61,"childNodes":[]},{"type":"BlockStmt","startLine":61,"endLine":66,"childNodes":[{"type":"ExpressionStmt","startLine":62,"endLine":62,"childNodes":[{"type":"VariableDeclarationExpr","startLine":62,"endLine":62,"childNodes":[{"type":"VariableDeclarator","startLine":62,"endLine":62,"childNodes":[{"type":"ClassOrInterfaceType","startLine":62,"endLine":62,"childNodes":[{"type":"SimpleName","startLine":62,"endLine":62,"childNodes":[]}]},{"type":"SimpleName","startLine":62,"endLine":62,"childNodes":[]},{"type":"ObjectCreationExpr","startLine":62,"endLine":62,"childNodes":[{"type":"ClassOrInterfaceType","startLine":62,"endLine":62,"childNodes":[{"type":"SimpleName","startLine":62,"endLine":62,"childNodes":[]}]},{"type":"FieldAccessExpr","startLine":62,"endLine":62,"childNodes":[{"type":"NameExpr","startLine":62,"endLine":62,"childNodes":[{"type":"SimpleName","startLine":62,"endLine":62,"childNodes":[]}]},{"type":"SimpleName","startLine":62,"endLine":62,"childNodes":[]}]}]}]}]}]},{"type":"ExpressionStmt","startLine":63,"endLine":63,"childNodes":[{"type":"MethodCallExpr","startLine":63,"endLine":63,"childNodes":[{"type":"NameExpr","startLine":63,"endLine":63,"childNodes":[{"type":"SimpleName","startLine":63,"endLine":63,"childNodes":[]}]},{"type":"SimpleName","startLine":63,"endLine":63,"childNodes":[]},{"type":"FieldAccessExpr","startLine":63,"endLine":63,"childNodes":[{"type":"NameExpr","startLine":63,"endLine":63,"childNodes":[{"type":"SimpleName","startLine":63,"endLine":63,"childNodes":[]}]},{"type":"SimpleName","startLine":63,"endLine":63,"childNodes":[]}]}]}]},{"type":"ExpressionStmt","startLine":64,"endLine":64,"childNodes":[{"type":"MethodCallExpr","startLine":64,"endLine":64,"childNodes":[{"type":"NameExpr","startLine":64,"endLine":64,"childNodes":[{"type":"SimpleName","startLine":64,"endLine":64,"childNodes":[]}]},{"type":"SimpleName","startLine":64,"endLine":64,"childNodes":[]},{"type":"NameExpr","startLine":64,"endLine":64,"childNodes":[{"type":"SimpleName","startLine":64,"endLine":64,"childNodes":[]}]},{"type":"NullLiteralExpr","startLine":64,"endLine":64,"childNodes":[]},{"type":"NullLiteralExpr","startLine":64,"endLine":64,"childNodes":[]}]}]},{"type":"ExpressionStmt","startLine":65,"endLine":65,"childNodes":[{"type":"MethodCallExpr","startLine":65,"endLine":65,"childNodes":[{"type":"SimpleName","startLine":65,"endLine":65,"childNodes":[]},{"type":"StringLiteralExprnull.null ENTRY","startLine":65,"endLine":65,"childNodes":[]},{"type":"MethodCallExpr","startLine":65,"endLine":65,"childNodes":[{"type":"NameExpr","startLine":65,"endLine":65,"childNodes":[{"type":"SimpleName","startLine":65,"endLine":65,"childNodes":[]}]},{"type":"SimpleName","startLine":65,"endLine":65,"childNodes":[]}]}]}]}]}]},"processedContent":"/**\n * Test LogXF.entering with null class and method.\n */\npublic void testEnteringNullNull() {\n    LogCapture VARIABLE_4 = new LogCapture(VARIABLE_3.DEBUG);\n    VARIABLE_2.setLevel(VARIABLE_3.DEBUG);\n    VARIABLE_1.entering(VARIABLE_2, null, null);\n    assertEquals(\"null.null ENTRY\", VARIABLE_4.getMessage());\n}","baseMethod":"/**\n * Test LogXF.entering with null class and method.\n */\npublic void testEnteringNullNull() {\n    LogCapture capture = new LogCapture(Level.DEBUG);\n    logger.setLevel(Level.DEBUG);\n    LogXF.entering(logger, null, null);\n    assertEquals(\"null.null ENTRY\", capture.getMessage());\n}","methodName":"testEnteringNullNull"},{"startLine":72,"endLine":77,"tree":{"type":"MethodDeclaration","startLine":72,"endLine":77,"childNodes":[{"type":"Modifier","startLine":72,"endLine":72,"childNodes":[]},{"type":"SimpleName","startLine":72,"endLine":72,"childNodes":[]},{"type":"VoidType","startLine":72,"endLine":72,"childNodes":[]},{"type":"BlockStmt","startLine":72,"endLine":77,"childNodes":[{"type":"ExpressionStmt","startLine":73,"endLine":73,"childNodes":[{"type":"VariableDeclarationExpr","startLine":73,"endLine":73,"childNodes":[{"type":"VariableDeclarator","startLine":73,"endLine":73,"childNodes":[{"type":"ClassOrInterfaceType","startLine":73,"endLine":73,"childNodes":[{"type":"SimpleName","startLine":73,"endLine":73,"childNodes":[]}]},{"type":"SimpleName","startLine":73,"endLine":73,"childNodes":[]},{"type":"ObjectCreationExpr","startLine":73,"endLine":73,"childNodes":[{"type":"ClassOrInterfaceType","startLine":73,"endLine":73,"childNodes":[{"type":"SimpleName","startLine":73,"endLine":73,"childNodes":[]}]},{"type":"FieldAccessExpr","startLine":73,"endLine":73,"childNodes":[{"type":"NameExpr","startLine":73,"endLine":73,"childNodes":[{"type":"SimpleName","startLine":73,"endLine":73,"childNodes":[]}]},{"type":"SimpleName","startLine":73,"endLine":73,"childNodes":[]}]}]}]}]}]},{"type":"ExpressionStmt","startLine":74,"endLine":74,"childNodes":[{"type":"MethodCallExpr","startLine":74,"endLine":74,"childNodes":[{"type":"NameExpr","startLine":74,"endLine":74,"childNodes":[{"type":"SimpleName","startLine":74,"endLine":74,"childNodes":[]}]},{"type":"SimpleName","startLine":74,"endLine":74,"childNodes":[]},{"type":"FieldAccessExpr","startLine":74,"endLine":74,"childNodes":[{"type":"NameExpr","startLine":74,"endLine":74,"childNodes":[{"type":"SimpleName","startLine":74,"endLine":74,"childNodes":[]}]},{"type":"SimpleName","startLine":74,"endLine":74,"childNodes":[]}]}]}]},{"type":"ExpressionStmt","startLine":75,"endLine":75,"childNodes":[{"type":"MethodCallExpr","startLine":75,"endLine":75,"childNodes":[{"type":"NameExpr","startLine":75,"endLine":75,"childNodes":[{"type":"SimpleName","startLine":75,"endLine":75,"childNodes":[]}]},{"type":"SimpleName","startLine":75,"endLine":75,"childNodes":[]},{"type":"NameExpr","startLine":75,"endLine":75,"childNodes":[{"type":"SimpleName","startLine":75,"endLine":75,"childNodes":[]}]},{"type":"NullLiteralExpr","startLine":75,"endLine":75,"childNodes":[]},{"type":"NullLiteralExpr","startLine":75,"endLine":75,"childNodes":[]},{"type":"CastExpr","startLine":75,"endLine":75,"childNodes":[{"type":"ClassOrInterfaceType","startLine":75,"endLine":75,"childNodes":[{"type":"SimpleName","startLine":75,"endLine":75,"childNodes":[]}]},{"type":"NullLiteralExpr","startLine":75,"endLine":75,"childNodes":[]}]}]}]},{"type":"ExpressionStmt","startLine":76,"endLine":76,"childNodes":[{"type":"MethodCallExpr","startLine":76,"endLine":76,"childNodes":[{"type":"SimpleName","startLine":76,"endLine":76,"childNodes":[]},{"type":"StringLiteralExprnull.null ENTRY null","startLine":76,"endLine":76,"childNodes":[]},{"type":"MethodCallExpr","startLine":76,"endLine":76,"childNodes":[{"type":"NameExpr","startLine":76,"endLine":76,"childNodes":[{"type":"SimpleName","startLine":76,"endLine":76,"childNodes":[]}]},{"type":"SimpleName","startLine":76,"endLine":76,"childNodes":[]}]}]}]}]}]},"processedContent":"/**\n * Test LogXF.entering with null class, method and parameter.\n */\npublic void testEnteringNullNullNull() {\n    LogCapture VARIABLE_4 = new LogCapture(VARIABLE_3.DEBUG);\n    VARIABLE_2.setLevel(VARIABLE_3.DEBUG);\n    VARIABLE_1.entering(VARIABLE_2, null, null, (String) null);\n    assertEquals(\"null.null ENTRY null\", VARIABLE_4.getMessage());\n}","baseMethod":"/**\n * Test LogXF.entering with null class, method and parameter.\n */\npublic void testEnteringNullNullNull() {\n    LogCapture capture = new LogCapture(Level.DEBUG);\n    logger.setLevel(Level.DEBUG);\n    LogXF.entering(logger, null, null, (String) null);\n    assertEquals(\"null.null ENTRY null\", capture.getMessage());\n}","methodName":"testEnteringNullNullNull"},{"startLine":82,"endLine":87,"tree":{"type":"MethodDeclaration","startLine":82,"endLine":87,"childNodes":[{"type":"Modifier","startLine":82,"endLine":82,"childNodes":[]},{"type":"SimpleName","startLine":82,"endLine":82,"childNodes":[]},{"type":"VoidType","startLine":82,"endLine":82,"childNodes":[]},{"type":"BlockStmt","startLine":82,"endLine":87,"childNodes":[{"type":"ExpressionStmt","startLine":83,"endLine":83,"childNodes":[{"type":"VariableDeclarationExpr","startLine":83,"endLine":83,"childNodes":[{"type":"VariableDeclarator","startLine":83,"endLine":83,"childNodes":[{"type":"ClassOrInterfaceType","startLine":83,"endLine":83,"childNodes":[{"type":"SimpleName","startLine":83,"endLine":83,"childNodes":[]}]},{"type":"SimpleName","startLine":83,"endLine":83,"childNodes":[]},{"type":"ObjectCreationExpr","startLine":83,"endLine":83,"childNodes":[{"type":"ClassOrInterfaceType","startLine":83,"endLine":83,"childNodes":[{"type":"SimpleName","startLine":83,"endLine":83,"childNodes":[]}]},{"type":"FieldAccessExpr","startLine":83,"endLine":83,"childNodes":[{"type":"NameExpr","startLine":83,"endLine":83,"childNodes":[{"type":"SimpleName","startLine":83,"endLine":83,"childNodes":[]}]},{"type":"SimpleName","startLine":83,"endLine":83,"childNodes":[]}]}]}]}]}]},{"type":"ExpressionStmt","startLine":84,"endLine":84,"childNodes":[{"type":"MethodCallExpr","startLine":84,"endLine":84,"childNodes":[{"type":"NameExpr","startLine":84,"endLine":84,"childNodes":[{"type":"SimpleName","startLine":84,"endLine":84,"childNodes":[]}]},{"type":"SimpleName","startLine":84,"endLine":84,"childNodes":[]},{"type":"FieldAccessExpr","startLine":84,"endLine":84,"childNodes":[{"type":"NameExpr","startLine":84,"endLine":84,"childNodes":[{"type":"SimpleName","startLine":84,"endLine":84,"childNodes":[]}]},{"type":"SimpleName","startLine":84,"endLine":84,"childNodes":[]}]}]}]},{"type":"ExpressionStmt","startLine":85,"endLine":85,"childNodes":[{"type":"MethodCallExpr","startLine":85,"endLine":85,"childNodes":[{"type":"NameExpr","startLine":85,"endLine":85,"childNodes":[{"type":"SimpleName","startLine":85,"endLine":85,"childNodes":[]}]},{"type":"SimpleName","startLine":85,"endLine":85,"childNodes":[]},{"type":"NameExpr","startLine":85,"endLine":85,"childNodes":[{"type":"SimpleName","startLine":85,"endLine":85,"childNodes":[]}]},{"type":"NullLiteralExpr","startLine":85,"endLine":85,"childNodes":[]},{"type":"NullLiteralExpr","startLine":85,"endLine":85,"childNodes":[]},{"type":"CastExpr","startLine":85,"endLine":85,"childNodes":[{"type":"ArrayType","startLine":85,"endLine":85,"childNodes":[{"type":"ClassOrInterfaceType","startLine":85,"endLine":85,"childNodes":[{"type":"SimpleName","startLine":85,"endLine":85,"childNodes":[]}]}]},{"type":"NullLiteralExpr","startLine":85,"endLine":85,"childNodes":[]}]}]}]},{"type":"ExpressionStmt","startLine":86,"endLine":86,"childNodes":[{"type":"MethodCallExpr","startLine":86,"endLine":86,"childNodes":[{"type":"SimpleName","startLine":86,"endLine":86,"childNodes":[]},{"type":"StringLiteralExprnull.null ENTRY {}","startLine":86,"endLine":86,"childNodes":[]},{"type":"MethodCallExpr","startLine":86,"endLine":86,"childNodes":[{"type":"NameExpr","startLine":86,"endLine":86,"childNodes":[{"type":"SimpleName","startLine":86,"endLine":86,"childNodes":[]}]},{"type":"SimpleName","startLine":86,"endLine":86,"childNodes":[]}]}]}]}]}]},"processedContent":"/**\n * Test LogXF.entering with null class, method and parameters.\n */\npublic void testEnteringNullNullNullArray() {\n    LogCapture VARIABLE_4 = new LogCapture(VARIABLE_3.DEBUG);\n    VARIABLE_2.setLevel(VARIABLE_3.DEBUG);\n    VARIABLE_1.entering(VARIABLE_2, null, null, (Object[]) null);\n    assertEquals(\"null.null ENTRY {}\", VARIABLE_4.getMessage());\n}","baseMethod":"/**\n * Test LogXF.entering with null class, method and parameters.\n */\npublic void testEnteringNullNullNullArray() {\n    LogCapture capture = new LogCapture(Level.DEBUG);\n    logger.setLevel(Level.DEBUG);\n    LogXF.entering(logger, null, null, (Object[]) null);\n    assertEquals(\"null.null ENTRY {}\", capture.getMessage());\n}","methodName":"testEnteringNullNullNullArray"},{"startLine":92,"endLine":97,"tree":{"type":"MethodDeclaration","startLine":92,"endLine":97,"childNodes":[{"type":"Modifier","startLine":92,"endLine":92,"childNodes":[]},{"type":"SimpleName","startLine":92,"endLine":92,"childNodes":[]},{"type":"VoidType","startLine":92,"endLine":92,"childNodes":[]},{"type":"BlockStmt","startLine":92,"endLine":97,"childNodes":[{"type":"ExpressionStmt","startLine":93,"endLine":93,"childNodes":[{"type":"VariableDeclarationExpr","startLine":93,"endLine":93,"childNodes":[{"type":"VariableDeclarator","startLine":93,"endLine":93,"childNodes":[{"type":"ClassOrInterfaceType","startLine":93,"endLine":93,"childNodes":[{"type":"SimpleName","startLine":93,"endLine":93,"childNodes":[]}]},{"type":"SimpleName","startLine":93,"endLine":93,"childNodes":[]},{"type":"ObjectCreationExpr","startLine":93,"endLine":93,"childNodes":[{"type":"ClassOrInterfaceType","startLine":93,"endLine":93,"childNodes":[{"type":"SimpleName","startLine":93,"endLine":93,"childNodes":[]}]},{"type":"FieldAccessExpr","startLine":93,"endLine":93,"childNodes":[{"type":"NameExpr","startLine":93,"endLine":93,"childNodes":[{"type":"SimpleName","startLine":93,"endLine":93,"childNodes":[]}]},{"type":"SimpleName","startLine":93,"endLine":93,"childNodes":[]}]}]}]}]}]},{"type":"ExpressionStmt","startLine":94,"endLine":94,"childNodes":[{"type":"MethodCallExpr","startLine":94,"endLine":94,"childNodes":[{"type":"NameExpr","startLine":94,"endLine":94,"childNodes":[{"type":"SimpleName","startLine":94,"endLine":94,"childNodes":[]}]},{"type":"SimpleName","startLine":94,"endLine":94,"childNodes":[]},{"type":"FieldAccessExpr","startLine":94,"endLine":94,"childNodes":[{"type":"NameExpr","startLine":94,"endLine":94,"childNodes":[{"type":"SimpleName","startLine":94,"endLine":94,"childNodes":[]}]},{"type":"SimpleName","startLine":94,"endLine":94,"childNodes":[]}]}]}]},{"type":"ExpressionStmt","startLine":95,"endLine":95,"childNodes":[{"type":"MethodCallExpr","startLine":95,"endLine":95,"childNodes":[{"type":"NameExpr","startLine":95,"endLine":95,"childNodes":[{"type":"SimpleName","startLine":95,"endLine":95,"childNodes":[]}]},{"type":"SimpleName","startLine":95,"endLine":95,"childNodes":[]},{"type":"NameExpr","startLine":95,"endLine":95,"childNodes":[{"type":"SimpleName","startLine":95,"endLine":95,"childNodes":[]}]},{"type":"StringLiteralExprSomeClass","startLine":95,"endLine":95,"childNodes":[]},{"type":"StringLiteralExprsomeMethod","startLine":95,"endLine":95,"childNodes":[]}]}]},{"type":"ExpressionStmt","startLine":96,"endLine":96,"childNodes":[{"type":"MethodCallExpr","startLine":96,"endLine":96,"childNodes":[{"type":"SimpleName","startLine":96,"endLine":96,"childNodes":[]},{"type":"StringLiteralExprSomeClass.someMethod ENTRY","startLine":96,"endLine":96,"childNodes":[]},{"type":"MethodCallExpr","startLine":96,"endLine":96,"childNodes":[{"type":"NameExpr","startLine":96,"endLine":96,"childNodes":[{"type":"SimpleName","startLine":96,"endLine":96,"childNodes":[]}]},{"type":"SimpleName","startLine":96,"endLine":96,"childNodes":[]}]}]}]}]}]},"processedContent":"/**\n * Test LogXF.entering with class and method.\n */\npublic void testEntering() {\n    LogCapture VARIABLE_4 = new LogCapture(VARIABLE_3.DEBUG);\n    VARIABLE_2.setLevel(VARIABLE_3.DEBUG);\n    VARIABLE_1.entering(VARIABLE_2, \"SomeClass\", \"someMethod\");\n    assertEquals(\"SomeClass.someMethod ENTRY\", VARIABLE_4.getMessage());\n}","baseMethod":"/**\n * Test LogXF.entering with class and method.\n */\npublic void testEntering() {\n    LogCapture capture = new LogCapture(Level.DEBUG);\n    logger.setLevel(Level.DEBUG);\n    LogXF.entering(logger, \"SomeClass\", \"someMethod\");\n    assertEquals(\"SomeClass.someMethod ENTRY\", capture.getMessage());\n}","methodName":"testEntering"},{"startLine":102,"endLine":107,"tree":{"type":"MethodDeclaration","startLine":102,"endLine":107,"childNodes":[{"type":"Modifier","startLine":102,"endLine":102,"childNodes":[]},{"type":"SimpleName","startLine":102,"endLine":102,"childNodes":[]},{"type":"VoidType","startLine":102,"endLine":102,"childNodes":[]},{"type":"BlockStmt","startLine":102,"endLine":107,"childNodes":[{"type":"ExpressionStmt","startLine":103,"endLine":103,"childNodes":[{"type":"VariableDeclarationExpr","startLine":103,"endLine":103,"childNodes":[{"type":"VariableDeclarator","startLine":103,"endLine":103,"childNodes":[{"type":"ClassOrInterfaceType","startLine":103,"endLine":103,"childNodes":[{"type":"SimpleName","startLine":103,"endLine":103,"childNodes":[]}]},{"type":"SimpleName","startLine":103,"endLine":103,"childNodes":[]},{"type":"ObjectCreationExpr","startLine":103,"endLine":103,"childNodes":[{"type":"ClassOrInterfaceType","startLine":103,"endLine":103,"childNodes":[{"type":"SimpleName","startLine":103,"endLine":103,"childNodes":[]}]},{"type":"FieldAccessExpr","startLine":103,"endLine":103,"childNodes":[{"type":"NameExpr","startLine":103,"endLine":103,"childNodes":[{"type":"SimpleName","startLine":103,"endLine":103,"childNodes":[]}]},{"type":"SimpleName","startLine":103,"endLine":103,"childNodes":[]}]}]}]}]}]},{"type":"ExpressionStmt","startLine":104,"endLine":104,"childNodes":[{"type":"MethodCallExpr","startLine":104,"endLine":104,"childNodes":[{"type":"NameExpr","startLine":104,"endLine":104,"childNodes":[{"type":"SimpleName","startLine":104,"endLine":104,"childNodes":[]}]},{"type":"SimpleName","startLine":104,"endLine":104,"childNodes":[]},{"type":"FieldAccessExpr","startLine":104,"endLine":104,"childNodes":[{"type":"NameExpr","startLine":104,"endLine":104,"childNodes":[{"type":"SimpleName","startLine":104,"endLine":104,"childNodes":[]}]},{"type":"SimpleName","startLine":104,"endLine":104,"childNodes":[]}]}]}]},{"type":"ExpressionStmt","startLine":105,"endLine":105,"childNodes":[{"type":"MethodCallExpr","startLine":105,"endLine":105,"childNodes":[{"type":"NameExpr","startLine":105,"endLine":105,"childNodes":[{"type":"SimpleName","startLine":105,"endLine":105,"childNodes":[]}]},{"type":"SimpleName","startLine":105,"endLine":105,"childNodes":[]},{"type":"NameExpr","startLine":105,"endLine":105,"childNodes":[{"type":"SimpleName","startLine":105,"endLine":105,"childNodes":[]}]},{"type":"StringLiteralExprSomeClass","startLine":105,"endLine":105,"childNodes":[]},{"type":"StringLiteralExprsomeMethod","startLine":105,"endLine":105,"childNodes":[]},{"type":"StringLiteralExprsomeParam","startLine":105,"endLine":105,"childNodes":[]}]}]},{"type":"ExpressionStmt","startLine":106,"endLine":106,"childNodes":[{"type":"MethodCallExpr","startLine":106,"endLine":106,"childNodes":[{"type":"SimpleName","startLine":106,"endLine":106,"childNodes":[]},{"type":"StringLiteralExprSomeClass.someMethod ENTRY someParam","startLine":106,"endLine":106,"childNodes":[]},{"type":"MethodCallExpr","startLine":106,"endLine":106,"childNodes":[{"type":"NameExpr","startLine":106,"endLine":106,"childNodes":[{"type":"SimpleName","startLine":106,"endLine":106,"childNodes":[]}]},{"type":"SimpleName","startLine":106,"endLine":106,"childNodes":[]}]}]}]}]}]},"processedContent":"/**\n * Test LogXF.entering with class, method and parameter.\n */\npublic void testEnteringWithParam() {\n    LogCapture VARIABLE_4 = new LogCapture(VARIABLE_3.DEBUG);\n    VARIABLE_2.setLevel(VARIABLE_3.DEBUG);\n    VARIABLE_1.entering(VARIABLE_2, \"SomeClass\", \"someMethod\", \"someParam\");\n    assertEquals(\"SomeClass.someMethod ENTRY someParam\", VARIABLE_4.getMessage());\n}","baseMethod":"/**\n * Test LogXF.entering with class, method and parameter.\n */\npublic void testEnteringWithParam() {\n    LogCapture capture = new LogCapture(Level.DEBUG);\n    logger.setLevel(Level.DEBUG);\n    LogXF.entering(logger, \"SomeClass\", \"someMethod\", \"someParam\");\n    assertEquals(\"SomeClass.someMethod ENTRY someParam\", capture.getMessage());\n}","methodName":"testEnteringWithParam"},{"startLine":112,"endLine":117,"tree":{"type":"MethodDeclaration","startLine":112,"endLine":117,"childNodes":[{"type":"Modifier","startLine":112,"endLine":112,"childNodes":[]},{"type":"SimpleName","startLine":112,"endLine":112,"childNodes":[]},{"type":"VoidType","startLine":112,"endLine":112,"childNodes":[]},{"type":"BlockStmt","startLine":112,"endLine":117,"childNodes":[{"type":"ExpressionStmt","startLine":113,"endLine":113,"childNodes":[{"type":"VariableDeclarationExpr","startLine":113,"endLine":113,"childNodes":[{"type":"VariableDeclarator","startLine":113,"endLine":113,"childNodes":[{"type":"ClassOrInterfaceType","startLine":113,"endLine":113,"childNodes":[{"type":"SimpleName","startLine":113,"endLine":113,"childNodes":[]}]},{"type":"SimpleName","startLine":113,"endLine":113,"childNodes":[]},{"type":"ObjectCreationExpr","startLine":113,"endLine":113,"childNodes":[{"type":"ClassOrInterfaceType","startLine":113,"endLine":113,"childNodes":[{"type":"SimpleName","startLine":113,"endLine":113,"childNodes":[]}]},{"type":"FieldAccessExpr","startLine":113,"endLine":113,"childNodes":[{"type":"NameExpr","startLine":113,"endLine":113,"childNodes":[{"type":"SimpleName","startLine":113,"endLine":113,"childNodes":[]}]},{"type":"SimpleName","startLine":113,"endLine":113,"childNodes":[]}]}]}]}]}]},{"type":"ExpressionStmt","startLine":114,"endLine":114,"childNodes":[{"type":"MethodCallExpr","startLine":114,"endLine":114,"childNodes":[{"type":"NameExpr","startLine":114,"endLine":114,"childNodes":[{"type":"SimpleName","startLine":114,"endLine":114,"childNodes":[]}]},{"type":"SimpleName","startLine":114,"endLine":114,"childNodes":[]},{"type":"FieldAccessExpr","startLine":114,"endLine":114,"childNodes":[{"type":"NameExpr","startLine":114,"endLine":114,"childNodes":[{"type":"SimpleName","startLine":114,"endLine":114,"childNodes":[]}]},{"type":"SimpleName","startLine":114,"endLine":114,"childNodes":[]}]}]}]},{"type":"ExpressionStmt","startLine":115,"endLine":115,"childNodes":[{"type":"MethodCallExpr","startLine":115,"endLine":115,"childNodes":[{"type":"NameExpr","startLine":115,"endLine":115,"childNodes":[{"type":"SimpleName","startLine":115,"endLine":115,"childNodes":[]}]},{"type":"SimpleName","startLine":115,"endLine":115,"childNodes":[]},{"type":"NameExpr","startLine":115,"endLine":115,"childNodes":[{"type":"SimpleName","startLine":115,"endLine":115,"childNodes":[]}]},{"type":"StringLiteralExprSomeClass","startLine":115,"endLine":115,"childNodes":[]},{"type":"StringLiteralExprsomeMethod","startLine":115,"endLine":115,"childNodes":[]},{"type":"FieldAccessExpr","startLine":115,"endLine":115,"childNodes":[{"type":"NameExpr","startLine":115,"endLine":115,"childNodes":[{"type":"SimpleName","startLine":115,"endLine":115,"childNodes":[]}]},{"type":"SimpleName","startLine":115,"endLine":115,"childNodes":[]}]}]}]},{"type":"ExpressionStmt","startLine":116,"endLine":116,"childNodes":[{"type":"MethodCallExpr","startLine":116,"endLine":116,"childNodes":[{"type":"SimpleName","startLine":116,"endLine":116,"childNodes":[]},{"type":"StringLiteralExprSomeClass.someMethod ENTRY ?","startLine":116,"endLine":116,"childNodes":[]},{"type":"MethodCallExpr","startLine":116,"endLine":116,"childNodes":[{"type":"NameExpr","startLine":116,"endLine":116,"childNodes":[{"type":"SimpleName","startLine":116,"endLine":116,"childNodes":[]}]},{"type":"SimpleName","startLine":116,"endLine":116,"childNodes":[]}]}]}]}]}]},"processedContent":"/**\n * Test LogXF.entering with class, method and bad parameter.\n */\npublic void testEnteringWithBadParam() {\n    LogCapture VARIABLE_5 = new LogCapture(VARIABLE_4.DEBUG);\n    VARIABLE_3.setLevel(VARIABLE_4.DEBUG);\n    VARIABLE_2.entering(VARIABLE_3, \"SomeClass\", \"someMethod\", VARIABLE_1.INSTANCE);\n    assertEquals(\"SomeClass.someMethod ENTRY ?\", VARIABLE_5.getMessage());\n}","baseMethod":"/**\n * Test LogXF.entering with class, method and bad parameter.\n */\npublic void testEnteringWithBadParam() {\n    LogCapture capture = new LogCapture(Level.DEBUG);\n    logger.setLevel(Level.DEBUG);\n    LogXF.entering(logger, \"SomeClass\", \"someMethod\", BadStringifier.INSTANCE);\n    assertEquals(\"SomeClass.someMethod ENTRY ?\", capture.getMessage());\n}","methodName":"testEnteringWithBadParam"},{"startLine":122,"endLine":127,"tree":{"type":"MethodDeclaration","startLine":122,"endLine":127,"childNodes":[{"type":"Modifier","startLine":122,"endLine":122,"childNodes":[]},{"type":"SimpleName","startLine":122,"endLine":122,"childNodes":[]},{"type":"VoidType","startLine":122,"endLine":122,"childNodes":[]},{"type":"BlockStmt","startLine":122,"endLine":127,"childNodes":[{"type":"ExpressionStmt","startLine":123,"endLine":123,"childNodes":[{"type":"VariableDeclarationExpr","startLine":123,"endLine":123,"childNodes":[{"type":"VariableDeclarator","startLine":123,"endLine":123,"childNodes":[{"type":"ClassOrInterfaceType","startLine":123,"endLine":123,"childNodes":[{"type":"SimpleName","startLine":123,"endLine":123,"childNodes":[]}]},{"type":"SimpleName","startLine":123,"endLine":123,"childNodes":[]},{"type":"ObjectCreationExpr","startLine":123,"endLine":123,"childNodes":[{"type":"ClassOrInterfaceType","startLine":123,"endLine":123,"childNodes":[{"type":"SimpleName","startLine":123,"endLine":123,"childNodes":[]}]},{"type":"FieldAccessExpr","startLine":123,"endLine":123,"childNodes":[{"type":"NameExpr","startLine":123,"endLine":123,"childNodes":[{"type":"SimpleName","startLine":123,"endLine":123,"childNodes":[]}]},{"type":"SimpleName","startLine":123,"endLine":123,"childNodes":[]}]}]}]}]}]},{"type":"ExpressionStmt","startLine":124,"endLine":124,"childNodes":[{"type":"MethodCallExpr","startLine":124,"endLine":124,"childNodes":[{"type":"NameExpr","startLine":124,"endLine":124,"childNodes":[{"type":"SimpleName","startLine":124,"endLine":124,"childNodes":[]}]},{"type":"SimpleName","startLine":124,"endLine":124,"childNodes":[]},{"type":"FieldAccessExpr","startLine":124,"endLine":124,"childNodes":[{"type":"NameExpr","startLine":124,"endLine":124,"childNodes":[{"type":"SimpleName","startLine":124,"endLine":124,"childNodes":[]}]},{"type":"SimpleName","startLine":124,"endLine":124,"childNodes":[]}]}]}]},{"type":"ExpressionStmt","startLine":125,"endLine":125,"childNodes":[{"type":"MethodCallExpr","startLine":125,"endLine":125,"childNodes":[{"type":"NameExpr","startLine":125,"endLine":125,"childNodes":[{"type":"SimpleName","startLine":125,"endLine":125,"childNodes":[]}]},{"type":"SimpleName","startLine":125,"endLine":125,"childNodes":[]},{"type":"NameExpr","startLine":125,"endLine":125,"childNodes":[{"type":"SimpleName","startLine":125,"endLine":125,"childNodes":[]}]},{"type":"StringLiteralExprSomeClass","startLine":125,"endLine":125,"childNodes":[]},{"type":"StringLiteralExprsomeMethod","startLine":125,"endLine":125,"childNodes":[]},{"type":"ArrayCreationExpr","startLine":125,"endLine":125,"childNodes":[{"type":"ClassOrInterfaceType","startLine":125,"endLine":125,"childNodes":[{"type":"SimpleName","startLine":125,"endLine":125,"childNodes":[]}]},{"type":"ArrayCreationLevel","startLine":125,"endLine":125,"childNodes":[]},{"type":"ArrayInitializerExpr","startLine":125,"endLine":125,"childNodes":[{"type":"StringLiteralExprparam1","startLine":125,"endLine":125,"childNodes":[]},{"type":"FieldAccessExpr","startLine":125,"endLine":125,"childNodes":[{"type":"NameExpr","startLine":125,"endLine":125,"childNodes":[{"type":"SimpleName","startLine":125,"endLine":125,"childNodes":[]}]},{"type":"SimpleName","startLine":125,"endLine":125,"childNodes":[]}]}]}]}]}]},{"type":"ExpressionStmt","startLine":126,"endLine":126,"childNodes":[{"type":"MethodCallExpr","startLine":126,"endLine":126,"childNodes":[{"type":"SimpleName","startLine":126,"endLine":126,"childNodes":[]},{"type":"StringLiteralExprSomeClass.someMethod ENTRY {param1,?}","startLine":126,"endLine":126,"childNodes":[]},{"type":"MethodCallExpr","startLine":126,"endLine":126,"childNodes":[{"type":"NameExpr","startLine":126,"endLine":126,"childNodes":[{"type":"SimpleName","startLine":126,"endLine":126,"childNodes":[]}]},{"type":"SimpleName","startLine":126,"endLine":126,"childNodes":[]}]}]}]}]}]},"processedContent":"/**\n * Test LogXF.entering with class, method and bad parameters.\n */\npublic void testEnteringWithBadParams() {\n    LogCapture VARIABLE_5 = new LogCapture(VARIABLE_4.DEBUG);\n    VARIABLE_3.setLevel(VARIABLE_4.DEBUG);\n    VARIABLE_2.entering(VARIABLE_3, \"SomeClass\", \"someMethod\", new Object[] { \"param1\", VARIABLE_1.INSTANCE });\n    assertEquals(\"SomeClass.someMethod ENTRY {param1,?}\", VARIABLE_5.getMessage());\n}","baseMethod":"/**\n * Test LogXF.entering with class, method and bad parameters.\n */\npublic void testEnteringWithBadParams() {\n    LogCapture capture = new LogCapture(Level.DEBUG);\n    logger.setLevel(Level.DEBUG);\n    LogXF.entering(logger, \"SomeClass\", \"someMethod\", new Object[] { \"param1\", BadStringifier.INSTANCE });\n    assertEquals(\"SomeClass.someMethod ENTRY {param1,?}\", capture.getMessage());\n}","methodName":"testEnteringWithBadParams"},{"startLine":133,"endLine":138,"tree":{"type":"MethodDeclaration","startLine":133,"endLine":138,"childNodes":[{"type":"Modifier","startLine":133,"endLine":133,"childNodes":[]},{"type":"SimpleName","startLine":133,"endLine":133,"childNodes":[]},{"type":"VoidType","startLine":133,"endLine":133,"childNodes":[]},{"type":"BlockStmt","startLine":133,"endLine":138,"childNodes":[{"type":"ExpressionStmt","startLine":134,"endLine":134,"childNodes":[{"type":"VariableDeclarationExpr","startLine":134,"endLine":134,"childNodes":[{"type":"VariableDeclarator","startLine":134,"endLine":134,"childNodes":[{"type":"ClassOrInterfaceType","startLine":134,"endLine":134,"childNodes":[{"type":"SimpleName","startLine":134,"endLine":134,"childNodes":[]}]},{"type":"SimpleName","startLine":134,"endLine":134,"childNodes":[]},{"type":"ObjectCreationExpr","startLine":134,"endLine":134,"childNodes":[{"type":"ClassOrInterfaceType","startLine":134,"endLine":134,"childNodes":[{"type":"SimpleName","startLine":134,"endLine":134,"childNodes":[]}]},{"type":"FieldAccessExpr","startLine":134,"endLine":134,"childNodes":[{"type":"NameExpr","startLine":134,"endLine":134,"childNodes":[{"type":"SimpleName","startLine":134,"endLine":134,"childNodes":[]}]},{"type":"SimpleName","startLine":134,"endLine":134,"childNodes":[]}]}]}]}]}]},{"type":"ExpressionStmt","startLine":135,"endLine":135,"childNodes":[{"type":"MethodCallExpr","startLine":135,"endLine":135,"childNodes":[{"type":"NameExpr","startLine":135,"endLine":135,"childNodes":[{"type":"SimpleName","startLine":135,"endLine":135,"childNodes":[]}]},{"type":"SimpleName","startLine":135,"endLine":135,"childNodes":[]},{"type":"FieldAccessExpr","startLine":135,"endLine":135,"childNodes":[{"type":"NameExpr","startLine":135,"endLine":135,"childNodes":[{"type":"SimpleName","startLine":135,"endLine":135,"childNodes":[]}]},{"type":"SimpleName","startLine":135,"endLine":135,"childNodes":[]}]}]}]},{"type":"ExpressionStmt","startLine":136,"endLine":136,"childNodes":[{"type":"MethodCallExpr","startLine":136,"endLine":136,"childNodes":[{"type":"NameExpr","startLine":136,"endLine":136,"childNodes":[{"type":"SimpleName","startLine":136,"endLine":136,"childNodes":[]}]},{"type":"SimpleName","startLine":136,"endLine":136,"childNodes":[]},{"type":"NameExpr","startLine":136,"endLine":136,"childNodes":[{"type":"SimpleName","startLine":136,"endLine":136,"childNodes":[]}]},{"type":"NullLiteralExpr","startLine":136,"endLine":136,"childNodes":[]},{"type":"NullLiteralExpr","startLine":136,"endLine":136,"childNodes":[]}]}]},{"type":"ExpressionStmt","startLine":137,"endLine":137,"childNodes":[{"type":"MethodCallExpr","startLine":137,"endLine":137,"childNodes":[{"type":"SimpleName","startLine":137,"endLine":137,"childNodes":[]},{"type":"StringLiteralExprnull.null RETURN","startLine":137,"endLine":137,"childNodes":[]},{"type":"MethodCallExpr","startLine":137,"endLine":137,"childNodes":[{"type":"NameExpr","startLine":137,"endLine":137,"childNodes":[{"type":"SimpleName","startLine":137,"endLine":137,"childNodes":[]}]},{"type":"SimpleName","startLine":137,"endLine":137,"childNodes":[]}]}]}]}]}]},"processedContent":"/**\n * Test LogXF.exiting with null class and method.\n */\npublic void testExitingNullNull() {\n    LogCapture VARIABLE_4 = new LogCapture(VARIABLE_3.DEBUG);\n    VARIABLE_2.setLevel(VARIABLE_3.DEBUG);\n    VARIABLE_1.exiting(VARIABLE_2, null, null);\n    assertEquals(\"null.null RETURN\", VARIABLE_4.getMessage());\n}","baseMethod":"/**\n * Test LogXF.exiting with null class and method.\n */\npublic void testExitingNullNull() {\n    LogCapture capture = new LogCapture(Level.DEBUG);\n    logger.setLevel(Level.DEBUG);\n    LogXF.exiting(logger, null, null);\n    assertEquals(\"null.null RETURN\", capture.getMessage());\n}","methodName":"testExitingNullNull"},{"startLine":144,"endLine":149,"tree":{"type":"MethodDeclaration","startLine":144,"endLine":149,"childNodes":[{"type":"Modifier","startLine":144,"endLine":144,"childNodes":[]},{"type":"SimpleName","startLine":144,"endLine":144,"childNodes":[]},{"type":"VoidType","startLine":144,"endLine":144,"childNodes":[]},{"type":"BlockStmt","startLine":144,"endLine":149,"childNodes":[{"type":"ExpressionStmt","startLine":145,"endLine":145,"childNodes":[{"type":"VariableDeclarationExpr","startLine":145,"endLine":145,"childNodes":[{"type":"VariableDeclarator","startLine":145,"endLine":145,"childNodes":[{"type":"ClassOrInterfaceType","startLine":145,"endLine":145,"childNodes":[{"type":"SimpleName","startLine":145,"endLine":145,"childNodes":[]}]},{"type":"SimpleName","startLine":145,"endLine":145,"childNodes":[]},{"type":"ObjectCreationExpr","startLine":145,"endLine":145,"childNodes":[{"type":"ClassOrInterfaceType","startLine":145,"endLine":145,"childNodes":[{"type":"SimpleName","startLine":145,"endLine":145,"childNodes":[]}]},{"type":"FieldAccessExpr","startLine":145,"endLine":145,"childNodes":[{"type":"NameExpr","startLine":145,"endLine":145,"childNodes":[{"type":"SimpleName","startLine":145,"endLine":145,"childNodes":[]}]},{"type":"SimpleName","startLine":145,"endLine":145,"childNodes":[]}]}]}]}]}]},{"type":"ExpressionStmt","startLine":146,"endLine":146,"childNodes":[{"type":"MethodCallExpr","startLine":146,"endLine":146,"childNodes":[{"type":"NameExpr","startLine":146,"endLine":146,"childNodes":[{"type":"SimpleName","startLine":146,"endLine":146,"childNodes":[]}]},{"type":"SimpleName","startLine":146,"endLine":146,"childNodes":[]},{"type":"FieldAccessExpr","startLine":146,"endLine":146,"childNodes":[{"type":"NameExpr","startLine":146,"endLine":146,"childNodes":[{"type":"SimpleName","startLine":146,"endLine":146,"childNodes":[]}]},{"type":"SimpleName","startLine":146,"endLine":146,"childNodes":[]}]}]}]},{"type":"ExpressionStmt","startLine":147,"endLine":147,"childNodes":[{"type":"MethodCallExpr","startLine":147,"endLine":147,"childNodes":[{"type":"NameExpr","startLine":147,"endLine":147,"childNodes":[{"type":"SimpleName","startLine":147,"endLine":147,"childNodes":[]}]},{"type":"SimpleName","startLine":147,"endLine":147,"childNodes":[]},{"type":"NameExpr","startLine":147,"endLine":147,"childNodes":[{"type":"SimpleName","startLine":147,"endLine":147,"childNodes":[]}]},{"type":"NullLiteralExpr","startLine":147,"endLine":147,"childNodes":[]},{"type":"NullLiteralExpr","startLine":147,"endLine":147,"childNodes":[]},{"type":"CastExpr","startLine":147,"endLine":147,"childNodes":[{"type":"ClassOrInterfaceType","startLine":147,"endLine":147,"childNodes":[{"type":"SimpleName","startLine":147,"endLine":147,"childNodes":[]}]},{"type":"NullLiteralExpr","startLine":147,"endLine":147,"childNodes":[]}]}]}]},{"type":"ExpressionStmt","startLine":148,"endLine":148,"childNodes":[{"type":"MethodCallExpr","startLine":148,"endLine":148,"childNodes":[{"type":"SimpleName","startLine":148,"endLine":148,"childNodes":[]},{"type":"StringLiteralExprnull.null RETURN null","startLine":148,"endLine":148,"childNodes":[]},{"type":"MethodCallExpr","startLine":148,"endLine":148,"childNodes":[{"type":"NameExpr","startLine":148,"endLine":148,"childNodes":[{"type":"SimpleName","startLine":148,"endLine":148,"childNodes":[]}]},{"type":"SimpleName","startLine":148,"endLine":148,"childNodes":[]}]}]}]}]}]},"processedContent":"/**\n * Test LogXF.exiting with null class, method and parameter.\n */\npublic void testExitingNullNullNull() {\n    LogCapture VARIABLE_4 = new LogCapture(VARIABLE_3.DEBUG);\n    VARIABLE_2.setLevel(VARIABLE_3.DEBUG);\n    VARIABLE_1.exiting(VARIABLE_2, null, null, (String) null);\n    assertEquals(\"null.null RETURN null\", VARIABLE_4.getMessage());\n}","baseMethod":"/**\n * Test LogXF.exiting with null class, method and parameter.\n */\npublic void testExitingNullNullNull() {\n    LogCapture capture = new LogCapture(Level.DEBUG);\n    logger.setLevel(Level.DEBUG);\n    LogXF.exiting(logger, null, null, (String) null);\n    assertEquals(\"null.null RETURN null\", capture.getMessage());\n}","methodName":"testExitingNullNullNull"},{"startLine":155,"endLine":160,"tree":{"type":"MethodDeclaration","startLine":155,"endLine":160,"childNodes":[{"type":"Modifier","startLine":155,"endLine":155,"childNodes":[]},{"type":"SimpleName","startLine":155,"endLine":155,"childNodes":[]},{"type":"VoidType","startLine":155,"endLine":155,"childNodes":[]},{"type":"BlockStmt","startLine":155,"endLine":160,"childNodes":[{"type":"ExpressionStmt","startLine":156,"endLine":156,"childNodes":[{"type":"VariableDeclarationExpr","startLine":156,"endLine":156,"childNodes":[{"type":"VariableDeclarator","startLine":156,"endLine":156,"childNodes":[{"type":"ClassOrInterfaceType","startLine":156,"endLine":156,"childNodes":[{"type":"SimpleName","startLine":156,"endLine":156,"childNodes":[]}]},{"type":"SimpleName","startLine":156,"endLine":156,"childNodes":[]},{"type":"ObjectCreationExpr","startLine":156,"endLine":156,"childNodes":[{"type":"ClassOrInterfaceType","startLine":156,"endLine":156,"childNodes":[{"type":"SimpleName","startLine":156,"endLine":156,"childNodes":[]}]},{"type":"FieldAccessExpr","startLine":156,"endLine":156,"childNodes":[{"type":"NameExpr","startLine":156,"endLine":156,"childNodes":[{"type":"SimpleName","startLine":156,"endLine":156,"childNodes":[]}]},{"type":"SimpleName","startLine":156,"endLine":156,"childNodes":[]}]}]}]}]}]},{"type":"ExpressionStmt","startLine":157,"endLine":157,"childNodes":[{"type":"MethodCallExpr","startLine":157,"endLine":157,"childNodes":[{"type":"NameExpr","startLine":157,"endLine":157,"childNodes":[{"type":"SimpleName","startLine":157,"endLine":157,"childNodes":[]}]},{"type":"SimpleName","startLine":157,"endLine":157,"childNodes":[]},{"type":"FieldAccessExpr","startLine":157,"endLine":157,"childNodes":[{"type":"NameExpr","startLine":157,"endLine":157,"childNodes":[{"type":"SimpleName","startLine":157,"endLine":157,"childNodes":[]}]},{"type":"SimpleName","startLine":157,"endLine":157,"childNodes":[]}]}]}]},{"type":"ExpressionStmt","startLine":158,"endLine":158,"childNodes":[{"type":"MethodCallExpr","startLine":158,"endLine":158,"childNodes":[{"type":"NameExpr","startLine":158,"endLine":158,"childNodes":[{"type":"SimpleName","startLine":158,"endLine":158,"childNodes":[]}]},{"type":"SimpleName","startLine":158,"endLine":158,"childNodes":[]},{"type":"NameExpr","startLine":158,"endLine":158,"childNodes":[{"type":"SimpleName","startLine":158,"endLine":158,"childNodes":[]}]},{"type":"StringLiteralExprSomeClass","startLine":158,"endLine":158,"childNodes":[]},{"type":"StringLiteralExprsomeMethod","startLine":158,"endLine":158,"childNodes":[]}]}]},{"type":"ExpressionStmt","startLine":159,"endLine":159,"childNodes":[{"type":"MethodCallExpr","startLine":159,"endLine":159,"childNodes":[{"type":"SimpleName","startLine":159,"endLine":159,"childNodes":[]},{"type":"StringLiteralExprSomeClass.someMethod RETURN","startLine":159,"endLine":159,"childNodes":[]},{"type":"MethodCallExpr","startLine":159,"endLine":159,"childNodes":[{"type":"NameExpr","startLine":159,"endLine":159,"childNodes":[{"type":"SimpleName","startLine":159,"endLine":159,"childNodes":[]}]},{"type":"SimpleName","startLine":159,"endLine":159,"childNodes":[]}]}]}]}]}]},"processedContent":"/**\n * Test LogXF.exiting with class and method.\n */\npublic void testExiting() {\n    LogCapture VARIABLE_4 = new LogCapture(VARIABLE_3.DEBUG);\n    VARIABLE_2.setLevel(VARIABLE_3.DEBUG);\n    VARIABLE_1.exiting(VARIABLE_2, \"SomeClass\", \"someMethod\");\n    assertEquals(\"SomeClass.someMethod RETURN\", VARIABLE_4.getMessage());\n}","baseMethod":"/**\n * Test LogXF.exiting with class and method.\n */\npublic void testExiting() {\n    LogCapture capture = new LogCapture(Level.DEBUG);\n    logger.setLevel(Level.DEBUG);\n    LogXF.exiting(logger, \"SomeClass\", \"someMethod\");\n    assertEquals(\"SomeClass.someMethod RETURN\", capture.getMessage());\n}","methodName":"testExiting"},{"startLine":165,"endLine":170,"tree":{"type":"MethodDeclaration","startLine":165,"endLine":170,"childNodes":[{"type":"Modifier","startLine":165,"endLine":165,"childNodes":[]},{"type":"SimpleName","startLine":165,"endLine":165,"childNodes":[]},{"type":"VoidType","startLine":165,"endLine":165,"childNodes":[]},{"type":"BlockStmt","startLine":165,"endLine":170,"childNodes":[{"type":"ExpressionStmt","startLine":166,"endLine":166,"childNodes":[{"type":"VariableDeclarationExpr","startLine":166,"endLine":166,"childNodes":[{"type":"VariableDeclarator","startLine":166,"endLine":166,"childNodes":[{"type":"ClassOrInterfaceType","startLine":166,"endLine":166,"childNodes":[{"type":"SimpleName","startLine":166,"endLine":166,"childNodes":[]}]},{"type":"SimpleName","startLine":166,"endLine":166,"childNodes":[]},{"type":"ObjectCreationExpr","startLine":166,"endLine":166,"childNodes":[{"type":"ClassOrInterfaceType","startLine":166,"endLine":166,"childNodes":[{"type":"SimpleName","startLine":166,"endLine":166,"childNodes":[]}]},{"type":"FieldAccessExpr","startLine":166,"endLine":166,"childNodes":[{"type":"NameExpr","startLine":166,"endLine":166,"childNodes":[{"type":"SimpleName","startLine":166,"endLine":166,"childNodes":[]}]},{"type":"SimpleName","startLine":166,"endLine":166,"childNodes":[]}]}]}]}]}]},{"type":"ExpressionStmt","startLine":167,"endLine":167,"childNodes":[{"type":"MethodCallExpr","startLine":167,"endLine":167,"childNodes":[{"type":"NameExpr","startLine":167,"endLine":167,"childNodes":[{"type":"SimpleName","startLine":167,"endLine":167,"childNodes":[]}]},{"type":"SimpleName","startLine":167,"endLine":167,"childNodes":[]},{"type":"FieldAccessExpr","startLine":167,"endLine":167,"childNodes":[{"type":"NameExpr","startLine":167,"endLine":167,"childNodes":[{"type":"SimpleName","startLine":167,"endLine":167,"childNodes":[]}]},{"type":"SimpleName","startLine":167,"endLine":167,"childNodes":[]}]}]}]},{"type":"ExpressionStmt","startLine":168,"endLine":168,"childNodes":[{"type":"MethodCallExpr","startLine":168,"endLine":168,"childNodes":[{"type":"NameExpr","startLine":168,"endLine":168,"childNodes":[{"type":"SimpleName","startLine":168,"endLine":168,"childNodes":[]}]},{"type":"SimpleName","startLine":168,"endLine":168,"childNodes":[]},{"type":"NameExpr","startLine":168,"endLine":168,"childNodes":[{"type":"SimpleName","startLine":168,"endLine":168,"childNodes":[]}]},{"type":"StringLiteralExprSomeClass","startLine":168,"endLine":168,"childNodes":[]},{"type":"StringLiteralExprsomeMethod","startLine":168,"endLine":168,"childNodes":[]},{"type":"StringLiteralExprsomeValue","startLine":168,"endLine":168,"childNodes":[]}]}]},{"type":"ExpressionStmt","startLine":169,"endLine":169,"childNodes":[{"type":"MethodCallExpr","startLine":169,"endLine":169,"childNodes":[{"type":"SimpleName","startLine":169,"endLine":169,"childNodes":[]},{"type":"StringLiteralExprSomeClass.someMethod RETURN someValue","startLine":169,"endLine":169,"childNodes":[]},{"type":"MethodCallExpr","startLine":169,"endLine":169,"childNodes":[{"type":"NameExpr","startLine":169,"endLine":169,"childNodes":[{"type":"SimpleName","startLine":169,"endLine":169,"childNodes":[]}]},{"type":"SimpleName","startLine":169,"endLine":169,"childNodes":[]}]}]}]}]}]},"processedContent":"/**\n * Test LogXF.exiting with class, method and return value.\n */\npublic void testExitingWithValue() {\n    LogCapture VARIABLE_4 = new LogCapture(VARIABLE_3.DEBUG);\n    VARIABLE_2.setLevel(VARIABLE_3.DEBUG);\n    VARIABLE_1.exiting(VARIABLE_2, \"SomeClass\", \"someMethod\", \"someValue\");\n    assertEquals(\"SomeClass.someMethod RETURN someValue\", VARIABLE_4.getMessage());\n}","baseMethod":"/**\n * Test LogXF.exiting with class, method and return value.\n */\npublic void testExitingWithValue() {\n    LogCapture capture = new LogCapture(Level.DEBUG);\n    logger.setLevel(Level.DEBUG);\n    LogXF.exiting(logger, \"SomeClass\", \"someMethod\", \"someValue\");\n    assertEquals(\"SomeClass.someMethod RETURN someValue\", capture.getMessage());\n}","methodName":"testExitingWithValue"},{"startLine":175,"endLine":180,"tree":{"type":"MethodDeclaration","startLine":175,"endLine":180,"childNodes":[{"type":"Modifier","startLine":175,"endLine":175,"childNodes":[]},{"type":"SimpleName","startLine":175,"endLine":175,"childNodes":[]},{"type":"VoidType","startLine":175,"endLine":175,"childNodes":[]},{"type":"BlockStmt","startLine":175,"endLine":180,"childNodes":[{"type":"ExpressionStmt","startLine":176,"endLine":176,"childNodes":[{"type":"VariableDeclarationExpr","startLine":176,"endLine":176,"childNodes":[{"type":"VariableDeclarator","startLine":176,"endLine":176,"childNodes":[{"type":"ClassOrInterfaceType","startLine":176,"endLine":176,"childNodes":[{"type":"SimpleName","startLine":176,"endLine":176,"childNodes":[]}]},{"type":"SimpleName","startLine":176,"endLine":176,"childNodes":[]},{"type":"ObjectCreationExpr","startLine":176,"endLine":176,"childNodes":[{"type":"ClassOrInterfaceType","startLine":176,"endLine":176,"childNodes":[{"type":"SimpleName","startLine":176,"endLine":176,"childNodes":[]}]},{"type":"FieldAccessExpr","startLine":176,"endLine":176,"childNodes":[{"type":"NameExpr","startLine":176,"endLine":176,"childNodes":[{"type":"SimpleName","startLine":176,"endLine":176,"childNodes":[]}]},{"type":"SimpleName","startLine":176,"endLine":176,"childNodes":[]}]}]}]}]}]},{"type":"ExpressionStmt","startLine":177,"endLine":177,"childNodes":[{"type":"MethodCallExpr","startLine":177,"endLine":177,"childNodes":[{"type":"NameExpr","startLine":177,"endLine":177,"childNodes":[{"type":"SimpleName","startLine":177,"endLine":177,"childNodes":[]}]},{"type":"SimpleName","startLine":177,"endLine":177,"childNodes":[]},{"type":"FieldAccessExpr","startLine":177,"endLine":177,"childNodes":[{"type":"NameExpr","startLine":177,"endLine":177,"childNodes":[{"type":"SimpleName","startLine":177,"endLine":177,"childNodes":[]}]},{"type":"SimpleName","startLine":177,"endLine":177,"childNodes":[]}]}]}]},{"type":"ExpressionStmt","startLine":178,"endLine":178,"childNodes":[{"type":"MethodCallExpr","startLine":178,"endLine":178,"childNodes":[{"type":"NameExpr","startLine":178,"endLine":178,"childNodes":[{"type":"SimpleName","startLine":178,"endLine":178,"childNodes":[]}]},{"type":"SimpleName","startLine":178,"endLine":178,"childNodes":[]},{"type":"NameExpr","startLine":178,"endLine":178,"childNodes":[{"type":"SimpleName","startLine":178,"endLine":178,"childNodes":[]}]},{"type":"StringLiteralExprSomeClass","startLine":178,"endLine":178,"childNodes":[]},{"type":"StringLiteralExprsomeMethod","startLine":178,"endLine":178,"childNodes":[]},{"type":"FieldAccessExpr","startLine":178,"endLine":178,"childNodes":[{"type":"NameExpr","startLine":178,"endLine":178,"childNodes":[{"type":"SimpleName","startLine":178,"endLine":178,"childNodes":[]}]},{"type":"SimpleName","startLine":178,"endLine":178,"childNodes":[]}]}]}]},{"type":"ExpressionStmt","startLine":179,"endLine":179,"childNodes":[{"type":"MethodCallExpr","startLine":179,"endLine":179,"childNodes":[{"type":"SimpleName","startLine":179,"endLine":179,"childNodes":[]},{"type":"StringLiteralExprSomeClass.someMethod RETURN ?","startLine":179,"endLine":179,"childNodes":[]},{"type":"MethodCallExpr","startLine":179,"endLine":179,"childNodes":[{"type":"NameExpr","startLine":179,"endLine":179,"childNodes":[{"type":"SimpleName","startLine":179,"endLine":179,"childNodes":[]}]},{"type":"SimpleName","startLine":179,"endLine":179,"childNodes":[]}]}]}]}]}]},"processedContent":"/**\n * Test LogXF.exiting with class, method and bad return value.\n */\npublic void testExitingWithBadValue() {\n    LogCapture VARIABLE_5 = new LogCapture(VARIABLE_4.DEBUG);\n    VARIABLE_3.setLevel(VARIABLE_4.DEBUG);\n    VARIABLE_2.exiting(VARIABLE_3, \"SomeClass\", \"someMethod\", VARIABLE_1.INSTANCE);\n    assertEquals(\"SomeClass.someMethod RETURN ?\", VARIABLE_5.getMessage());\n}","baseMethod":"/**\n * Test LogXF.exiting with class, method and bad return value.\n */\npublic void testExitingWithBadValue() {\n    LogCapture capture = new LogCapture(Level.DEBUG);\n    logger.setLevel(Level.DEBUG);\n    LogXF.exiting(logger, \"SomeClass\", \"someMethod\", BadStringifier.INSTANCE);\n    assertEquals(\"SomeClass.someMethod RETURN ?\", capture.getMessage());\n}","methodName":"testExitingWithBadValue"},{"startLine":186,"endLine":191,"tree":{"type":"MethodDeclaration","startLine":186,"endLine":191,"childNodes":[{"type":"Modifier","startLine":186,"endLine":186,"childNodes":[]},{"type":"SimpleName","startLine":186,"endLine":186,"childNodes":[]},{"type":"VoidType","startLine":186,"endLine":186,"childNodes":[]},{"type":"BlockStmt","startLine":186,"endLine":191,"childNodes":[{"type":"ExpressionStmt","startLine":187,"endLine":187,"childNodes":[{"type":"VariableDeclarationExpr","startLine":187,"endLine":187,"childNodes":[{"type":"VariableDeclarator","startLine":187,"endLine":187,"childNodes":[{"type":"ClassOrInterfaceType","startLine":187,"endLine":187,"childNodes":[{"type":"SimpleName","startLine":187,"endLine":187,"childNodes":[]}]},{"type":"SimpleName","startLine":187,"endLine":187,"childNodes":[]},{"type":"ObjectCreationExpr","startLine":187,"endLine":187,"childNodes":[{"type":"ClassOrInterfaceType","startLine":187,"endLine":187,"childNodes":[{"type":"SimpleName","startLine":187,"endLine":187,"childNodes":[]}]},{"type":"FieldAccessExpr","startLine":187,"endLine":187,"childNodes":[{"type":"NameExpr","startLine":187,"endLine":187,"childNodes":[{"type":"SimpleName","startLine":187,"endLine":187,"childNodes":[]}]},{"type":"SimpleName","startLine":187,"endLine":187,"childNodes":[]}]}]}]}]}]},{"type":"ExpressionStmt","startLine":188,"endLine":188,"childNodes":[{"type":"MethodCallExpr","startLine":188,"endLine":188,"childNodes":[{"type":"NameExpr","startLine":188,"endLine":188,"childNodes":[{"type":"SimpleName","startLine":188,"endLine":188,"childNodes":[]}]},{"type":"SimpleName","startLine":188,"endLine":188,"childNodes":[]},{"type":"FieldAccessExpr","startLine":188,"endLine":188,"childNodes":[{"type":"NameExpr","startLine":188,"endLine":188,"childNodes":[{"type":"SimpleName","startLine":188,"endLine":188,"childNodes":[]}]},{"type":"SimpleName","startLine":188,"endLine":188,"childNodes":[]}]}]}]},{"type":"ExpressionStmt","startLine":189,"endLine":189,"childNodes":[{"type":"MethodCallExpr","startLine":189,"endLine":189,"childNodes":[{"type":"NameExpr","startLine":189,"endLine":189,"childNodes":[{"type":"SimpleName","startLine":189,"endLine":189,"childNodes":[]}]},{"type":"SimpleName","startLine":189,"endLine":189,"childNodes":[]},{"type":"NameExpr","startLine":189,"endLine":189,"childNodes":[{"type":"SimpleName","startLine":189,"endLine":189,"childNodes":[]}]},{"type":"NullLiteralExpr","startLine":189,"endLine":189,"childNodes":[]},{"type":"NullLiteralExpr","startLine":189,"endLine":189,"childNodes":[]},{"type":"NullLiteralExpr","startLine":189,"endLine":189,"childNodes":[]}]}]},{"type":"ExpressionStmt","startLine":190,"endLine":190,"childNodes":[{"type":"MethodCallExpr","startLine":190,"endLine":190,"childNodes":[{"type":"SimpleName","startLine":190,"endLine":190,"childNodes":[]},{"type":"StringLiteralExprnull.null THROW","startLine":190,"endLine":190,"childNodes":[]},{"type":"MethodCallExpr","startLine":190,"endLine":190,"childNodes":[{"type":"NameExpr","startLine":190,"endLine":190,"childNodes":[{"type":"SimpleName","startLine":190,"endLine":190,"childNodes":[]}]},{"type":"SimpleName","startLine":190,"endLine":190,"childNodes":[]}]}]}]}]}]},"processedContent":"/**\n * Test LogXF.throwing with null class, method and throwable.\n */\npublic void testThrowingNullNullNull() {\n    LogCapture VARIABLE_4 = new LogCapture(VARIABLE_3.DEBUG);\n    VARIABLE_2.setLevel(VARIABLE_3.DEBUG);\n    VARIABLE_1.throwing(VARIABLE_2, null, null, null);\n    assertEquals(\"null.null THROW\", VARIABLE_4.getMessage());\n}","baseMethod":"/**\n * Test LogXF.throwing with null class, method and throwable.\n */\npublic void testThrowingNullNullNull() {\n    LogCapture capture = new LogCapture(Level.DEBUG);\n    logger.setLevel(Level.DEBUG);\n    LogXF.throwing(logger, null, null, null);\n    assertEquals(\"null.null THROW\", capture.getMessage());\n}","methodName":"testThrowingNullNullNull"},{"startLine":197,"endLine":202,"tree":{"type":"MethodDeclaration","startLine":197,"endLine":202,"childNodes":[{"type":"Modifier","startLine":197,"endLine":197,"childNodes":[]},{"type":"SimpleName","startLine":197,"endLine":197,"childNodes":[]},{"type":"VoidType","startLine":197,"endLine":197,"childNodes":[]},{"type":"BlockStmt","startLine":197,"endLine":202,"childNodes":[{"type":"ExpressionStmt","startLine":198,"endLine":198,"childNodes":[{"type":"VariableDeclarationExpr","startLine":198,"endLine":198,"childNodes":[{"type":"VariableDeclarator","startLine":198,"endLine":198,"childNodes":[{"type":"ClassOrInterfaceType","startLine":198,"endLine":198,"childNodes":[{"type":"SimpleName","startLine":198,"endLine":198,"childNodes":[]}]},{"type":"SimpleName","startLine":198,"endLine":198,"childNodes":[]},{"type":"ObjectCreationExpr","startLine":198,"endLine":198,"childNodes":[{"type":"ClassOrInterfaceType","startLine":198,"endLine":198,"childNodes":[{"type":"SimpleName","startLine":198,"endLine":198,"childNodes":[]}]},{"type":"FieldAccessExpr","startLine":198,"endLine":198,"childNodes":[{"type":"NameExpr","startLine":198,"endLine":198,"childNodes":[{"type":"SimpleName","startLine":198,"endLine":198,"childNodes":[]}]},{"type":"SimpleName","startLine":198,"endLine":198,"childNodes":[]}]}]}]}]}]},{"type":"ExpressionStmt","startLine":199,"endLine":199,"childNodes":[{"type":"MethodCallExpr","startLine":199,"endLine":199,"childNodes":[{"type":"NameExpr","startLine":199,"endLine":199,"childNodes":[{"type":"SimpleName","startLine":199,"endLine":199,"childNodes":[]}]},{"type":"SimpleName","startLine":199,"endLine":199,"childNodes":[]},{"type":"FieldAccessExpr","startLine":199,"endLine":199,"childNodes":[{"type":"NameExpr","startLine":199,"endLine":199,"childNodes":[{"type":"SimpleName","startLine":199,"endLine":199,"childNodes":[]}]},{"type":"SimpleName","startLine":199,"endLine":199,"childNodes":[]}]}]}]},{"type":"ExpressionStmt","startLine":200,"endLine":200,"childNodes":[{"type":"MethodCallExpr","startLine":200,"endLine":200,"childNodes":[{"type":"NameExpr","startLine":200,"endLine":200,"childNodes":[{"type":"SimpleName","startLine":200,"endLine":200,"childNodes":[]}]},{"type":"SimpleName","startLine":200,"endLine":200,"childNodes":[]},{"type":"NameExpr","startLine":200,"endLine":200,"childNodes":[{"type":"SimpleName","startLine":200,"endLine":200,"childNodes":[]}]},{"type":"StringLiteralExprSomeClass","startLine":200,"endLine":200,"childNodes":[]},{"type":"StringLiteralExprsomeMethod","startLine":200,"endLine":200,"childNodes":[]},{"type":"ObjectCreationExpr","startLine":200,"endLine":200,"childNodes":[{"type":"ClassOrInterfaceType","startLine":200,"endLine":200,"childNodes":[{"type":"SimpleName","startLine":200,"endLine":200,"childNodes":[]}]}]}]}]},{"type":"ExpressionStmt","startLine":201,"endLine":201,"childNodes":[{"type":"MethodCallExpr","startLine":201,"endLine":201,"childNodes":[{"type":"SimpleName","startLine":201,"endLine":201,"childNodes":[]},{"type":"StringLiteralExprSomeClass.someMethod THROW","startLine":201,"endLine":201,"childNodes":[]},{"type":"MethodCallExpr","startLine":201,"endLine":201,"childNodes":[{"type":"NameExpr","startLine":201,"endLine":201,"childNodes":[{"type":"SimpleName","startLine":201,"endLine":201,"childNodes":[]}]},{"type":"SimpleName","startLine":201,"endLine":201,"childNodes":[]}]}]}]}]}]},"processedContent":"/**\n * Test LogXF.exiting with class and method.\n */\npublic void testThrowing() {\n    LogCapture VARIABLE_4 = new LogCapture(VARIABLE_3.DEBUG);\n    VARIABLE_2.setLevel(VARIABLE_3.DEBUG);\n    VARIABLE_1.throwing(VARIABLE_2, \"SomeClass\", \"someMethod\", new IllegalArgumentException());\n    assertEquals(\"SomeClass.someMethod THROW\", VARIABLE_4.getMessage());\n}","baseMethod":"/**\n * Test LogXF.exiting with class and method.\n */\npublic void testThrowing() {\n    LogCapture capture = new LogCapture(Level.DEBUG);\n    logger.setLevel(Level.DEBUG);\n    LogXF.throwing(logger, \"SomeClass\", \"someMethod\", new IllegalArgumentException());\n    assertEquals(\"SomeClass.someMethod THROW\", capture.getMessage());\n}","methodName":"testThrowing"}]